# JARVICE Terraform Configuration - Migration Notice
#
# This file has been refactored into modular, platform-specific files for better
# organization and maintainability. The original monolithic configuration has been
# split into the following files in the tfvars/ directory:
#
# * tfvars/global.tfvars - Global settings shared across all cluster types
# * tfvars/k8s.tfvars    - Pre-existing Kubernetes clusters
# * tfvars/gkev2.tfvars  - Google Cloud GKE v2 clusters
# * tfvars/capg.tfvars   - CAPG (Cluster API Provider for GCP) clusters
# * tfvars/eksv2.tfvars  - Amazon EKS v2 clusters
# * tfvars/aks.tfvars    - Azure AKS clusters
#
# USAGE:
# ------
# Instead of using this file directly, use the modular approach:
#
# Example 1: Deploy GKE clusters only
# terraform plan -var-file="tfvars/global.tfvars" -var-file="tfvars/gkev2.tfvars"
# terraform apply -var-file="tfvars/global.tfvars" -var-file="tfvars/gkev2.tfvars"
#
# Example 2: Deploy multiple platforms
# terraform plan -var-file="tfvars/global.tfvars" -var-file="tfvars/gkev2.tfvars" -var-file="tfvars/eksv2.tfvars"
#
# Example 3: Use the deployment script (recommended)
# ./deploy.sh plan gkev2 eksv2
# ./deploy.sh apply all
#
# For detailed usage instructions, see: tfvars/README.md
#
# MIGRATION:
# ----------
# The original configuration has been backed up to terraform.tfvars.backup
# Review and update the new modular files according to your requirements.
# Make sure to set enabled = true for the clusters you want to deploy.
#
# BENEFITS:
# ---------
# * Better organization and maintainability
# * Platform-specific configurations are isolated
# * Selective deployment of specific cloud providers
# * Reduced configuration conflicts
# * Easier collaboration across teams

# Placeholder variables to prevent terraform errors if this file is accidentally used
# All actual configurations are in the tfvars/ directory

global = {}
k8s = {}
gkev2 = {}
capg = {}
eksv2 = {}
aks = {}
