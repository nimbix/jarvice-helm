{{- if (not (eq "downstream" .Values.jarvice.JARVICE_CLUSTER_TYPE)) }}
{{- if .Values.jarvice_bird.enabled }}
{{- if gt (.Values.jarvice_bird.replicaCount | int) 1 }}
{{- if (semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion) }}
apiVersion: policy/v1
{{- else }}
apiVersion: policy/v1beta1
{{- end }}
kind: PodDisruptionBudget
metadata:
  name: jarvice-bird
spec:
  selector:
    matchLabels:
      deployment: jarvice-bird
  minAvailable: {{ .Values.jarvice_bird.pdb.minAvailable }}
---
{{- end }}
{{- if gt (.Values.jarvice_bird.replicaCountMax | int) (.Values.jarvice_bird.replicaCount | int) }}
{{- if (semverCompare ">=1.23-0" .Capabilities.KubeVersion.GitVersion) }}
apiVersion: autoscaling/v2
{{- else }}
apiVersion: autoscaling/v2beta2
{{- end }}
kind: HorizontalPodAutoscaler
metadata:
  name: jarvice-bird
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-bird
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: jarvice-bird
  minReplicas: {{ .Values.jarvice_bird.replicaCount }}
  maxReplicas: {{ .Values.jarvice_bird.replicaCountMax }}
  metrics:
    {{- toYaml .Values.jarvice_bird.autoscaling.metrics | nindent 4 }}
---
{{- end}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jarvice-bird
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-bird
    deployment: jarvice-bird
    jarvice-system: core
spec:
  replicas: {{ .Values.jarvice_bird.replicaCount }}
  selector:
    matchLabels:
      deployment: jarvice-bird
  template:
    metadata:
      labels:
        {{- include "jarvice.release_labels" . | indent 8 }}
        component: jarvice-bird
        deployment: jarvice-bird
        jarvice-system: core
      annotations:
        deployment-date: {{ now | quote }}
    spec:
      serviceAccountName: jarvice-system
{{- if (not (empty .Values.jarvice_bird.tolerations)) }}
      tolerations: {{ .Values.jarvice_bird.tolerations }}
{{- else if (not (empty .Values.jarvice.tolerations)) }}
      tolerations: {{ .Values.jarvice.tolerations }}
{{- end }}
{{- if (not (empty .Values.jarvice_bird.nodeSelector)) }}
      nodeSelector: {{ .Values.jarvice_bird.nodeSelector }}
{{- else if (not (empty .Values.jarvice.nodeSelector)) }}
      nodeSelector: {{ .Values.jarvice.nodeSelector }}
{{- end }}
      affinity:
{{- if (not (empty .Values.jarvice_bird.nodeAffinity)) }}
        nodeAffinity: {{ .Values.jarvice_bird.nodeAffinity }}
{{- else if (not (empty .Values.jarvice.nodeAffinity)) }}
        nodeAffinity: {{ .Values.jarvice.nodeAffinity }}
{{- end }}
        podAntiAffinity:
        {{- if eq .Values.jarvice_bird.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                deployment: jarvice-bird
        {{- else if eq .Values.jarvice_bird.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  deployment: jarvice-bird
        {{- end }}
      imagePullSecrets:
      - name: jarvice-docker
      volumes:
      - name: bird-config
        configMap:
          defaultMode: 420
          items:
          - key: jarvice-bird-config.json
            path: config.json
{{- if empty .Values.jarvice_bird.conf.configMap }}
          name: jarvice-bird-config
{{- else }}
          name: "{{ .Values.jarvice_bird.conf.configMap }}"
{{- end }}
      - name: nginx-config
        configMap:
          defaultMode: 420
          items:
          - key: jarvice-bird-nginx.conf
            path: default.conf.template
{{- if empty .Values.jarvice_bird.nginx.configMap }}
          name: jarvice-bird-nginx-config
{{- else }}
          name: "{{ .Values.jarvice_bird.nginx.configMap }}"
{{- end }}
{{- if (not (empty .Values.jarvice.cacert.user.configMap)) }}
      - name: ca-jarvice-user
        configMap:
          name: "{{ .Values.jarvice.cacert.user.configMap }}"
          optional: false
          defaultMode: 444
{{- end }}
      - name : jarvice-bird-server
        emptyDir:
          sizeLimit: 100Mi
{{- if (not (empty .Values.jarvice.cacert.java.configMap)) }}
      - name: jarvice-java-cacert
        configMap:
          name: {{ .Values.jarvice.cacert.java.configMap }}
          optional: false
          defaultMode: 444
{{- end }}
{{- if (not (empty .Values.jarvice_bird.preset.configMap)) }}
      - name: jarvice-bird-user-preset
        configMap:
          name: {{ .Values.jarvice_bird.preset.configMap }}
          optional: false
          defaultMode: 444
{{- end }}
      - name: jarvice-settings
        configMap:
          name: {{ .Values.jarvice.settings.configMap }}
          optional: true
      - name: jarvice-secrets
        secret:
          secretName: jarvice-secrets
          optional: true
      - name: krb5-keytab
        secret:
          secretName: krb5.keytab
          defaultMode: 0644
          items:
          - key: krb5.keytab
            mode: 0644
            path: krb5.keytab
      containers:
      - name: jarvice-bird
        image: {{ include "jarvice.registry" . }}/{{ .Values.jarvice.JARVICE_SYSTEM_REPO_BASE }}/jarvice-bird:{{ default .Values.jarvice.JARVICE_IMAGES_TAG .Chart.Annotations.tag }}{{- include "jarvice.version" . }}
{{- if and (empty .Values.jarvice.JARVICE_IMAGES_VERSION) (empty .Chart.Annotations.tag) }}
        imagePullPolicy: Always
{{- else }}
        imagePullPolicy: IfNotPresent
{{- end }}
        command:
          - sh
        args:
          - -c
          - |
            /docker-entrypoint.d/*-envsubst-on-templates.sh
            /usr/local/bin/docker-entrypoint.sh
        ports:
          - name: http
            containerPort: 8000
        readinessProbe:
          exec:
            command:
            - /bin/true
          initialDelaySeconds: {{ .Values.jarvice_bird.bird.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.jarvice_bird.bird.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.jarvice_bird.bird.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.jarvice_bird.bird.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.jarvice_bird.bird.readinessProbe.failureThreshold }}
        livenessProbe:
          exec:
            command:
            - /bin/true
          initialDelaySeconds: {{ .Values.jarvice_bird.bird.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.jarvice_bird.bird.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.jarvice_bird.bird.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.jarvice_bird.bird.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.jarvice_bird.bird.livenessProbe.failureThreshold }}
        env:
          - name: JARVICE_SERVER_PROXY
{{- if empty .Values.jarvice.JARVICE_SYSTEM_NAMESPACE }}
            value: "http://jarvice-bird-server.{{ .Release.Namespace }}.svc.cluster.local:9090/"
{{- else }}
            value: "http://jarvice-bird-server.{{ .Values.jarvice.JARVICE_SYSTEM_NAMESPACE }}.svc.cluster.local:9090/"
{{- end }}
          - name: KEYCLOAK_URL
{{- if (not (empty .Values.jarvice_bird.env.KEYCLOAK_URL)) }}
            value: {{ .Values.jarvice_bird.env.KEYCLOAK_URL }} # https://jarvice-kc.jarvicedev.com/auth
{{- else }}
{{- required "***** !!!!! A valid keycloak server is required.  Please provide a value for jarvice_bird.env.KEYCLOAK_URL. !!!!! *****" .Values.jarvice_bird.env.KEYCLOAK_URL }}
{{- end }}
          - name: KEYCLOAK_ID
{{- if empty .Values.jarvice_bird.env.KEYCLOAK_ID }}
            value: jarvice
{{- else }}
            value: "{{ .Values.jarvice_bird.env.KEYCLOAK_ID }}"
{{- end }}
          - name: KEYCLOAK_REALM
{{- if empty .Values.jarvice_bird.env.KEYCLOAK_REALM }}
            value: jarvice
{{- else }}
            value: "{{ .Values.jarvice_bird.env.KEYCLOAK_REALM }}"
{{- end }}
{{- if or .Values.jarvice.JARVICE_HTTPS_PROXY .Values.jarvice.JARVICE_HTTP_PROXY .Values.jarvice.JARVICE_NO_PROXY }}
{{- if (not (empty .Values.jarvice.JARVICE_NO_PROXY)) }}
          - name: no_proxy
            value: '{{ include "jarvice.no_proxy" . }},{{ .Values.jarvice.JARVICE_NO_PROXY }}'
{{- else }}
          - name: no_proxy
            value: '{{ include "jarvice.no_proxy" . }}'
{{- end }}
{{- end }}
        volumeMounts:
        - mountPath: /etc/nginx/templates/
          name: nginx-config
          readOnly: true
        - mountPath: /usr/share/nginx/html/web-ui-grid/config/config.json
          name: bird-config
          readOnly: true
          subPath: config.json
        - mountPath: /usr/share/nginx/html/config/config.json
          name: bird-config
          readOnly: true
          subPath: config.json
{{- if (not (empty .Values.jarvice.cacert.user.configMap)) }}
        - name: ca-jarvice-user
          mountPath: /etc/ssl/certs/ca-certificates.crt
          subPath: ca-certificates.crt
          readOnly: true
{{- end }}
        resources:
{{ toYaml .Values.jarvice_bird.bird.resources | indent 10 }}
      - name: jarvice-bird-portal
        image: {{ include "jarvice.registry" . }}/{{ .Values.jarvice.JARVICE_SYSTEM_REPO_BASE }}/jarvice-bird-portal:{{ default .Values.jarvice.JARVICE_IMAGES_TAG .Chart.Annotations.tag }}{{- include "jarvice.version" . }}
{{- if and (empty .Values.jarvice.JARVICE_IMAGES_VERSION) (empty .Chart.Annotations.tag) }}
        imagePullPolicy: Always
{{- else }}
        imagePullPolicy: IfNotPresent
{{- end }}
        ports:
          - name: http-portal
            containerPort: 8080
        readinessProbe:
          httpGet:
            scheme: HTTP
            port: http-portal
            path: /ready
          initialDelaySeconds: {{ .Values.jarvice_bird.portal.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.jarvice_bird.portal.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.jarvice_bird.portal.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.jarvice_bird.portal.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.jarvice_bird.portal.readinessProbe.failureThreshold }}
        livenessProbe:
          httpGet:
            scheme: HTTP
            port: http-portal
            path: /live
          initialDelaySeconds: {{ .Values.jarvice_bird.portal.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.jarvice_bird.portal.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.jarvice_bird.portal.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.jarvice_bird.portal.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.jarvice_bird.portal.livenessProbe.failureThreshold }}
        env:
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_BIRD_PORTAL_URL)) }}
          - name: JARVICE_BIRD_PORTAL_URL
            value: "{{ .Values.jarvice_bird.env.JARVICE_BIRD_PORTAL_URL }}"
{{- else if (not (empty .Values.jarvice_bird.ingressHost)) }}
          - name: JARVICE_BIRD_PORTAL_URL
            value: 'https://{{- .Values.jarvice_bird.ingressHost -}}{{- .Values.jarvice_bird.ingressPath -}}'
{{- else }}
{{- required "***** !!!!! JARVICE_BIRD_PORTAL_URL required. Please provide a value for jarvice_bird.env.JARVICE_BIRD_PORTAL_URL. !!!!! *****" .Values.jarvice_bird.env.JARVICE_BIRD_PORTAL_URL }}
{{- end }}
          - name: REQUESTS_CA_BUNDLE
            value: "/etc/ssl/certs/ca-certificates.crt"
          - name: JARVICE_SYSTEM_K8S
{{- if empty .Values.jarvice.JARVICE_SYSTEM_K8S }}
            value: "true"
{{- else }}
            value: "{{ .Values.jarvice.JARVICE_SYSTEM_K8S }}"
{{- end }}
          - name: JARVICE_EXPERIMENTAL
{{- if empty .Values.jarvice.JARVICE_EXPERIMENTAL }}
            value: "false"
{{- else }}
            value: "{{ .Values.jarvice.JARVICE_EXPERIMENTAL }}"
{{- end }}
          - name: JARVICE_DAL_URL
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_DAL_URL)) }}
            value: "{{ .Values.jarvice_bird.env.JARVICE_DAL_URL }}"
{{- else }}
            value: "http://jarvice-dal:8080"
{{- end }}
          - name: JARVICE_API_URL
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_API_URL)) }}
            value: "{{ .Values.jarvice_bird.env.JARVICE_API_URL }}"
{{- else }}
            value: "http://jarvice-api:8080"
{{- end }}
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_API_PUBLIC_URL)) }}
          - name: JARVICE_API_PUBLIC_URL
            value: "{{ .Values.jarvice_bird.env.JARVICE_API_PUBLIC_URL }}"
{{- else if (not (empty .Values.jarvice.JARVICE_API_PUBLIC_URL)) }}
          - name: JARVICE_API_PUBLIC_URL
            value: "{{ .Values.jarvice.JARVICE_API_PUBLIC_URL }}"
{{- else if (not (empty .Values.jarvice_api.ingressHost)) }}
          - name: JARVICE_API_PUBLIC_URL
            value: 'https://{{- .Values.jarvice_api.ingressHost -}}{{- eq .Values.jarvice_api.ingressPath "/" | ternary "" ".Values.jarvice_api.ingressPath" -}}'
{{- end }}
          - name: JARVICE_USER_DEFAULT_ENABLED
            value: "{{ .Values.jarvice_bird.env.JARVICE_USER_DEFAULT_ENABLED }}"
          - name: JARVICE_USER_DEFAULT_DEVELOPER
            value: "{{ .Values.jarvice_bird.env.JARVICE_USER_DEFAULT_DEVELOPER }}"
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_PORTAL_GSS_REALM)) }}
          - name: JARVICE_PORTAL_GSS_REALM
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_GSS_REALM }}"
{{- end }}
          - name: JARVICE_PORTAL_JOB_TERMINATE_LIMIT
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_PORTAL_JOB_TERMINATE_LIMIT)) }}
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_JOB_TERMINATE_LIMIT }}"
{{- else }}
            value: "10"
{{- end }}
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_PORTAL_GSS_DOMAIN)) }}
          - name: JARVICE_PORTAL_GSS_DOMAIN
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_GSS_DOMAIN }}"
{{- end }}
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_PORTAL_GSS_LOG)) }}
          - name: JARVICE_PORTAL_GSS_LOG
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_GSS_LOG }}"
{{- end }}
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_DISABLE_API_SUBST_WARNING)) }}
          - name: JARVICE_DISABLE_API_SUBST_WARNING
            value: "{{ .Values.jarvice_bird.env.JARVICE_DISABLE_API_SUBST_WARNING }}"
{{- end }}
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_PORTAL_WEB_HOST)) }}
          - name: JARVICE_PORTAL_WEB_HOST
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_WEB_HOST }}"
{{- else if (not (empty .Values.jarvice_bird.ingressHost)) }}
          - name: JARVICE_PORTAL_WEB_HOST
            value: 'https://{{- .Values.jarvice_bird.ingressHost -}}{{- .Values.jarvice_bird.ingressPath -}}portal'
{{- end }}
          - name: JARVICE_PORTAL_MEMCACHED_LOCATIONS
{{- if and .Values.jarvice_memcached.enabled (empty .Values.jarvice_bird.env.JARVICE_PORTAL_MEMCACHED_LOCATIONS) }}
            {{- $memcachedCount := .Values.jarvice_memcached.replicaCount }}
            value: "
              {{- range $i, $none := until (int $memcachedCount) }}
                {{- if gt $i 0}},{{- end }}jarvice-memcached-{{ $i }}.jarvice-memcached:11211
              {{- end }}"
{{- else }}
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_MEMCACHED_LOCATIONS }}"
{{- end }}
          - name: JARVICE_PORTAL_APP_OWNERS
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_APP_OWNERS }}"
{{- if (not (empty .Values.jarvice.JARVICE_HTTP_PROXY)) }}
          - name: http_proxy
            value: "{{ .Values.jarvice.JARVICE_HTTP_PROXY }}"
{{- end }}
{{- if (not (empty .Values.jarvice.JARVICE_HTTPS_PROXY)) }}
          - name: https_proxy
            value: "{{ .Values.jarvice.JARVICE_HTTPS_PROXY }}"
{{- end }}
{{- if or .Values.jarvice.JARVICE_HTTPS_PROXY .Values.jarvice.JARVICE_HTTP_PROXY .Values.jarvice.JARVICE_NO_PROXY }}
{{- if (not (empty .Values.jarvice.JARVICE_NO_PROXY)) }}
          - name: no_proxy
            value: '{{ include "jarvice.no_proxy" . }},{{ .Values.jarvice.JARVICE_NO_PROXY }}'
{{- else }}
          - name: no_proxy
            value: '{{ include "jarvice.no_proxy" . }}'
{{- end }}
{{- end }}
          - name: JARVICE_PORTAL_MAIL_FROM
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_PORTAL_MAIL_FROM)) }}
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_MAIL_FROM }}"
{{- else }}
            value: "{{ .Values.jarvice.JARVICE_PORTAL_MAIL_FROM }}"
{{- end }}
          - name: JARVICE_PORTAL_MAIL_SUBJECT
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_PORTAL_MAIL_SUBJECT)) }}
            value: "{{ .Values.jarvice_portal.env.JARVICE_PORTAL_MAIL_SUBJECT }}"
{{- else }}
            value: "{{ .Values.jarvice.JARVICE_PORTAL_MAIL_SUBJECT }}"
{{- end }}
          - name: JARVICE_PORTAL_MAIL_SERVER
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_PORTAL_MAIL_SERVER)) }}
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_MAIL_SERVER }}"
{{- else }}
            value: "{{ .Values.jarvice.JARVICE_MAIL_SERVER }}"
{{- end }}
          - name: JARVICE_PORTAL_MAIL_USERNAME
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_PORTAL_MAIL_USERNAME)) }}
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_MAIL_USERNAME }}"
{{- else }}
            value: "{{ .Values.jarvice.JARVICE_MAIL_USERNAME }}"
{{- end }}
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_PORTAL_MAIL_PASSWORD)) }}
          - name: JARVICE_PORTAL_MAIL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: jarvice-bird-portal
                key: JARVICE_PORTAL_MAIL_PASSWORD
{{- else if (not (empty .Values.jarvice.JARVICE_MAIL_PASSWORD)) }}
          - name: JARVICE_PORTAL_MAIL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: jarvice-mail
                key: JARVICE_MAIL_PASSWORD
{{- end }}
          - name: JARVICE_PORTAL_MAIL_ADMINS
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_PORTAL_MAIL_ADMINS)) }}
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_MAIL_ADMINS }}"
{{- else }}
            value: "{{ .Values.jarvice.JARVICE_MAIL_ADMINS }}"
{{- end }}
          - name: JARVICE_PORTAL_DB
{{- if empty .Values.jarvice_bird.env.JARVICE_PORTAL_DB }}
            value: "nimbix_portal_ng"
{{- else }}
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_DB }}"
{{- end }}
          - name: JARVICE_PORTAL_DBHOST
{{- if empty .Values.jarvice_bird.env.JARVICE_PORTAL_DBHOST }}
            value: "{{ .Values.jarvice.JARVICE_DBHOST }}"
{{- else }}
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_DBHOST }}"
{{- end }}
          - name: JARVICE_PORTAL_DBUSER
{{- if empty .Values.jarvice_bird.env.JARVICE_PORTAL_DBUSER }}
            value: "{{ .Values.jarvice.JARVICE_DBUSER }}"
{{- else }}
            value: "{{ .Values.jarvice_bird.env.JARVICE_PORTAL_DBUSER }}"
{{- end }}
          - name: JARVICE_PORTAL_DBPASSWD
            valueFrom:
              secretKeyRef:
                name: jarvice-db
{{- if empty .Values.jarvice_bird.env.JARVICE_PORTAL_DBPASSWD }}
                key: JARVICE_DBPASSWD
{{- else }}
                key: JARVICE_PORTAL_DBPASSWD
{{- end }}
          - name: JARVICE_KEYCLOAK_URL
            value: "{{ .Values.jarvice_bird.env.KEYCLOAK_URL }}"
          - name: JARVICE_KEYCLOAK_CLIENT_ID
{{- if empty .Values.jarvice_bird.env.KEYCLOAK_ID }}
            value: jarvice
{{- else }}
            value: "{{ .Values.jarvice_bird.env.KEYCLOAK_ID }}"
{{- end }}
          - name: JARVICE_KEYCLOAK_REALM
{{- if empty .Values.jarvice_bird.env.KEYCLOAK_REALM }}
            value: jarvice
{{- else }}
            value: "{{ .Values.jarvice_bird.env.KEYCLOAK_REALM }}"
{{- end }}
          - name: JARVICE_KEYCLOAK_ADMIN_USER
{{- if empty .Values.jarvice_bird.env.JARVICE_KEYCLOAK_ADMIN_USER }}
            value: jarvice
{{- else }}
            value: "{{ .Values.jarvice_bird.env.JARVICE_KEYCLOAK_ADMIN_USER }}"
{{- end }}
{{- if (not (empty .Values.jarvice_bird.env.JARVICE_KEYCLOAK_ADMIN_PASS)) }}
          - name: JARVICE_KEYCLOAK_ADMIN_PASS
            valueFrom:
              secretKeyRef:
                name: jarvice-keycloak-admin
                key: JARVICE_KEYCLOAK_ADMIN_PASS
{{- end }}
{{- if (not (empty .Values.jarvice.JARVICE_LICENSE_MANAGER_KEY)) }}
          - name: JARVICE_LICENSE_MANAGER_KEY
            valueFrom:
              secretKeyRef:
                name: jarvice-license-manager
                key: JARVICE_LICENSE_MANAGER_KEY
{{- end }}
        volumeMounts:
        - name: jarvice-settings
          mountPath: /etc/jarvice/settings/jarvice-bird-portal
          readOnly: true
        - name: jarvice-secrets
          mountPath: /etc/jarvice/secrets/jarvice-bird-portal
          readOnly: true
        - name: krb5-keytab
          mountPath: /etc/krb5.keytab
          subPath: krb5.keytab
          readOnly: true
{{- if (not (empty .Values.jarvice.cacert.user.configMap)) }}
        - name: ca-jarvice-user
          mountPath: /etc/ssl/certs/ca-certificates.crt
          subPath: ca-certificates.crt
          readOnly: true
{{- end }}
        resources:
{{ toYaml .Values.jarvice_bird.portal.resources | indent 10 }}
---
{{- if and .Values.jarvice_bird.server.persistence.enabled (empty .Values.jarvice_bird.server.persistence.existingClaimName) }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jarvice-bird-server
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-bird-server
{{- if eq .Values.jarvice_bird.server.persistence.resourcePolicy "keep" }}
  annotations:
    helm.sh/resource-policy: keep
{{- end }}
spec:
  accessModes:
    - {{ .Values.jarvice_bird.server.persistence.accessMode }}
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.jarvice_bird.server.persistence.size }}
{{- if .Values.jarvice_bird.server.persistence.storageClass }}
{{- if (eq "-" .Values.jarvice_bird.server.persistence.storageClass) }}
  storageClassName: ""
{{- else }}
  storageClassName: "{{ .Values.jarvice_bird.server.persistence.storageClass }}"
{{- end }}
{{- end }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jarvice-bird-server
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-bird-server
    deployment: jarvice-bird-server
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      deployment: jarvice-bird-server
  template:
    metadata:
      labels:
        {{- include "jarvice.release_labels" . | indent 8 }}
        component: jarvice-bird-server
        deployment: jarvice-bird-server
    spec:
{{- if (not (empty .Values.jarvice_bird.tolerations)) }}
      tolerations: {{ .Values.jarvice_bird.tolerations }}
{{- else if (not (empty .Values.jarvice.tolerations)) }}
      tolerations: {{ .Values.jarvice.tolerations }}
{{- end }}
{{- if (not (empty .Values.jarvice_bird.nodeSelector)) }}
      nodeSelector: {{ .Values.jarvice_bird.nodeSelector }}
{{- else if (not (empty .Values.jarvice.nodeSelector)) }}
      nodeSelector: {{ .Values.jarvice.nodeSelector }}
{{- end }}
{{- if (not (empty .Values.jarvice_bird.nodeAffinity)) }}
      affinity:
        nodeAffinity: {{ .Values.jarvice_bird.nodeAffinity }}
{{- else if (not (empty .Values.jarvice.nodeAffinity)) }}
      affinity:
        nodeAffinity: {{ .Values.jarvice.nodeAffinity }}
{{- end }}
      imagePullSecrets:
      - name: jarvice-docker
      volumes:
{{- if (not (empty .Values.jarvice.cacert.java.configMap)) }}
      - name: jarvice-java-cacert
        configMap:
          name: {{ .Values.jarvice.cacert.java.configMap }}
          optional: false
          defaultMode: 444
{{- end }}
      - name : jarvice-bird-server
{{- if .Values.jarvice_bird.server.persistence.enabled }}
        persistentVolumeClaim:
{{- if (empty .Values.jarvice_bird.server.persistence.existingClaimName) }}
          claimName: jarvice-bird-server
{{- else }}
          claimName: {{ .Values.jarvice_bird.server.persistence.existingClaimName }}
{{- end }}
{{- else }}
        emptyDir:
          sizeLimit: 100Mi
{{- end }}
{{- if (not (empty .Values.jarvice_bird.preset.configMap)) }}
      - name: jarvice-bird-user-preset
        configMap:
          name: {{ .Values.jarvice_bird.preset.configMap }}
          optional: false
          defaultMode: 444
{{- end }}
      initContainers:
      - name: chown
        image: {{ .Values.jarvice_k8s_scheduler.env.JARVICE_PVCLS_IMAGE }}
        command: ['sh', '-c', 'chown 890:890 /home/bird']
        volumeMounts:
        - mountPath: /home/bird
          name: jarvice-bird-server
      containers:
      - name: jarvice-bird-server
        image: {{ include "jarvice.registry" . }}/{{ .Values.jarvice.JARVICE_SYSTEM_REPO_BASE }}/jarvice-bird-server:{{ default .Values.jarvice.JARVICE_IMAGES_TAG .Chart.Annotations.tag }}{{- include "jarvice.version" . }}
{{- if and (empty .Values.jarvice.JARVICE_IMAGES_VERSION) (empty .Chart.Annotations.tag) }}
        imagePullPolicy: Always
{{- else }}
        imagePullPolicy: IfNotPresent
{{- end }}
        ports:
          - name: http-server
            containerPort: 9090
        readinessProbe:
          exec:
            command:
            - /bin/true
          initialDelaySeconds: {{ .Values.jarvice_bird.server.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.jarvice_bird.server.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.jarvice_bird.server.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.jarvice_bird.server.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.jarvice_bird.server.readinessProbe.failureThreshold }}
        livenessProbe:
          exec:
            command:
            - /bin/true
          initialDelaySeconds: {{ .Values.jarvice_bird.server.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.jarvice_bird.server.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.jarvice_bird.server.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.jarvice_bird.server.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.jarvice_bird.server.livenessProbe.failureThreshold }}
        env:
          - name: TOKEN_INFO_URI
            value: "{{ .Values.jarvice_bird.env.KEYCLOAK_URL }}/realm/{{ .Values.jarvice_bird.env.KEYCLOAK_REALM }}/protocol/openid-connect/token/introspect"
          - name: KEYCLOAK_URI
            value: {{ .Values.jarvice_bird.env.KEYCLOAK_URL }}
          - name: CLIENT_ID
{{- if empty .Values.jarvice_bird.env.KEYCLOAK_ID }}
            value: jarvice
{{- else }}
            value: "{{ .Values.jarvice_bird.env.KEYCLOAK_ID }}"
{{- end }}
          - name: PORT
            value: "9090"
          - name: TENANT_SCHEMAS
{{- if empty .Values.jarvice_bird.env.KEYCLOAK_REALM }}
            value: jarvice
{{- else }}
            value: "{{ .Values.jarvice_bird.env.KEYCLOAK_REALM }}"
{{- end }}
        volumeMounts:
        - mountPath: /home/bird
          name: jarvice-bird-server
{{- if (not (empty .Values.jarvice.cacert.java.configMap)) }}
        - name: jarvice-java-cacert
          mountPath: /etc/ssl/certs/java/cacerts
          subPath: cacerts
{{- end }}
{{- if (not (empty .Values.jarvice_bird.preset.configMap)) }}
        - name: jarvice-bird-user-preset
          mountPath: /opt/bird/bird-presets/user_dashboards_configuration_default.json
          subPath: user_dashboards_configuration_default.json
          readOnly: true
{{- end }}
        resources:
{{ toYaml .Values.jarvice_bird.server.resources | indent 10 }}
        securityContext:
          fsGroup: {{ .Values.jarvice_bird.server.securityContext.fsGroup }}
---
apiVersion: v1
kind: Service
metadata:
  name: jarvice-bird
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-bird
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 8000
    targetPort: http
    name: http
  - protocol: TCP
    port: 8080
    targetPort: http-portal
    name: http-portal
  selector:
    deployment: jarvice-bird
---
apiVersion: v1
kind: Service
metadata:
  name: jarvice-bird-server
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-bird-server
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090
    name: jarvice-bird-server
  selector:
    deployment: jarvice-bird-server
---
{{- if or .Values.jarvice_bird.networkPolicy.enabled (and (eq "<nil>" (toString .Values.jarvice_bird.networkPolicy.enabled)) .Values.jarvice.networkPolicy.enabled) }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: jarvice-bird
spec:
  podSelector:
    matchLabels:
      deployment: jarvice-bird
  policyTypes:
  - Ingress
  ingress:
{{- if (empty .Values.jarvice_bird.ingressHost) }}
  - {}
{{- else }}
  - from:
    - namespaceSelector: {}
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 9090
{{- end }}
---
{{- end }}
{{- if (empty .Values.jarvice_bird.ingressHost) }}
apiVersion: v1
kind: Service
metadata:
  name: jarvice-bird-lb
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-bird
spec:
  type: LoadBalancer
  loadBalancerIP: {{ .Values.jarvice_bird.loadBalancerIP }}
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: http
  selector:
    deployment: jarvice-bird
---
{{- else }}
{{- if (semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion) }}
apiVersion: networking.k8s.io/v1
{{- else }}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: jarvice-bird
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-bird
  annotations:
{{- if (not (semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion)) }}
{{- if (not (empty .Values.jarvice.ingress.class)) }}
    kubernetes.io/ingress.class: {{ .Values.jarvice.ingress.class }}
{{- end }}
{{- end }}
{{- if and (not (empty .Values.jarvice.ingress.tls.issuer.name)) (and (empty .Values.jarvice.ingress.tls.crt) (empty .Values.jarvice.ingress.tls.key)) }}
    cert-manager.io/issuer: {{ .Values.jarvice.ingress.tls.issuer.name }}
{{- else if and (not (empty .Values.jarvice.ingress.tls.cluster_issuer.name)) (and (empty .Values.jarvice.ingress.tls.crt) (empty .Values.jarvice.ingress.tls.key)) }}
    cert-manager.io/cluster-issuer: {{ .Values.jarvice.ingress.tls.cluster_issuer.name }}
{{- end }}
{{- if .Values.jarvice_bird.ingressAnnotations }}
{{- if (kindIs "string" .Values.jarvice_bird.ingressAnnotations) }}
{{ toYaml (fromJson .Values.jarvice_bird.ingressAnnotations) | indent 4 }}
{{- else }}
{{ toYaml .Values.jarvice_bird.ingressAnnotations | indent 4 }}
{{- end }}
{{- end }}
spec:
{{- if (semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion) }}
{{- if (not (empty .Values.jarvice.ingress.class)) }}
  ingressClassName: {{ .Values.jarvice.ingress.class }}
{{- end }}
{{- end }}
  rules:
  - http:
      paths:
{{- if (semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion) }}
{{- if (ne "/" .Values.jarvice_bird.ingressPath) }}
      - backend:
          service:
            name: jarvice-bird
            port:
              name: http
        pathType: Prefix
        path: "{{ .Values.jarvice_bird.ingressPath }}"
{{- else }}
      - backend:
          service:
            name: jarvice-bird
            port:
              name: http
        pathType: Prefix
        path: /
{{- end }}
{{- else }}
{{- if (ne "/" .Values.jarvice_bird.ingressPath) }}
      - backend:
          serviceName: jarvice-bird
          servicePort: http
        path: "{{ .Values.jarvice_bird.ingressPath }}"
{{- else }}
      - backend:
          serviceName: jarvice-bird
          servicePort: http
        path: /
{{- end }}
{{- end }}
{{- if ne "-" .Values.jarvice_bird.ingressHost }}
    host: '{{- .Values.jarvice_bird.ingressHost -}}'
{{- if or (not (empty .Values.jarvice.ingress.tls.cluster_issuer.name)) (not (empty .Values.jarvice.ingress.tls.issuer.name)) (and (not (empty .Values.jarvice.ingress.tls.crt)) (not (empty .Values.jarvice.ingress.tls.key))) }}
  tls:
  - hosts:
    - '{{- .Values.jarvice_bird.ingressHost -}}'
{{- if and (not (empty .Values.jarvice.ingress.tls.crt)) (not (empty .Values.jarvice.ingress.tls.key)) }}
    secretName: 'tls-jarvice'
{{- else }}
    secretName: 'tls-{{- .Values.jarvice_bird.ingressHost -}}'
{{- end }}
{{- end }}
{{- end }}
---
{{- end }}
{{- if empty .Values.jarvice_bird.conf.configMap }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: jarvice-bird-config
data:
  jarvice-bird-config.json: |-
{{ .Files.Get "files/jarvice-bird-config.json" | indent 4 }}
---
{{- end }}
{{- if empty .Values.jarvice_bird.nginx.configMap }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: jarvice-bird-nginx-config
data:
  jarvice-bird-nginx.conf: |-
{{ .Files.Get "files/jarvice-bird-nginx.conf.template" | indent 4 }}
---
{{- end }}
{{- end }}
{{- end }}
