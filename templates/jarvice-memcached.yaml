{{- if (not (eq "downstream" .Values.jarvice.JARVICE_CLUSTER_TYPE)) }}
{{- if .Values.jarvice_memcached.enabled }}
{{- if gt (.Values.jarvice_memcached.replicaCount | int) 1 }}
{{- if (semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion) }}
apiVersion: policy/v1
{{- else }}
apiVersion: policy/v1beta1
{{- end }}
kind: PodDisruptionBudget
metadata:
  name: jarvice-memcached
spec:
  selector:
    matchLabels:
      deployment: jarvice-memcached
  minAvailable: {{ .Values.jarvice_memcached.pdb.minAvailable }}
---
{{- end }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jarvice-memcached
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-memcached
    deployment: jarvice-memcached
spec:
  serviceName: jarvice-memcached
  replicas: {{ .Values.jarvice_memcached.replicaCount }}
  selector:
    matchLabels:
      deployment: jarvice-memcached
  template:
    metadata:
      labels:
        {{- include "jarvice.release_labels" . | indent 8 }}
        component: jarvice-memcached
        deployment: jarvice-memcached
    spec:
{{- if (not (empty .Values.jarvice_memcached.tolerations)) }}
      tolerations: {{ .Values.jarvice_memcached.tolerations }}
{{- else if (not (empty .Values.jarvice.tolerations)) }}
      tolerations: {{ .Values.jarvice.tolerations }}
{{- end }}
{{- if (not (empty .Values.jarvice_memcached.nodeSelector)) }}
      nodeSelector: {{ .Values.jarvice_memcached.nodeSelector }}
{{- else if (not (empty .Values.jarvice.nodeSelector)) }}
      nodeSelector: {{ .Values.jarvice.nodeSelector }}
{{- end }}
      affinity:
{{- if (not (empty .Values.jarvice_memcached.nodeAffinity)) }}
        nodeAffinity: {{ .Values.jarvice_memcached.nodeAffinity }}
{{- else if (not (empty .Values.jarvice.nodeAffinity)) }}
        nodeAffinity: {{ .Values.jarvice.nodeAffinity }}
{{- end }}
        podAntiAffinity:
        {{- if eq .Values.jarvice_memcached.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                deployment: jarvice-memcached
        {{- else if eq .Values.jarvice_memcached.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  deployment: jarvice-memcached
        {{- end }}
{{- if .Values.jarvice_registry_proxy.enabled }}
      imagePullSecrets:
      - name: jarvice-docker
{{- end }}
      containers:
      - name: jarvice-memcached
        image: {{ template "jarvice.registrysub" merge (dict "image" .Values.jarvice_memcached.image) . }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.jarvice_memcached.imagePullPolicy }}
        command:
        - memcached
        - -m {{ .Values.jarvice_memcached.maxItemMemory  }}
        {{- if .Values.jarvice_memcached.extendedOptions }}
        - -o
        - {{ .Values.jarvice_memcached.extendedOptions }}
        {{- end }}
        {{- if .Values.jarvice_memcached.verbosity }}
        - -{{ .Values.jarvice_memcached.verbosity }}
        {{- end }}
        ports:
          - name: jarvice-memcach
            containerPort: 11211
        readinessProbe:
          tcpSocket:
            port: jarvice-memcach
          initialDelaySeconds: {{ .Values.jarvice_memcached.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.jarvice_memcached.readinessProbe.timeoutSeconds }}
        livenessProbe:
          tcpSocket:
            port: jarvice-memcach
          initialDelaySeconds: {{ .Values.jarvice_memcached.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.jarvice_memcached.livenessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.jarvice_memcached.resources | indent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: jarvice-memcached
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-memcached
spec:
  clusterIP: None
  ports:
  - protocol: TCP
    port: 11211
    targetPort: 11211
    name: jarvice-memcach
  selector:
    deployment: jarvice-memcached
---
{{- if or .Values.jarvice_memcached.networkPolicy.enabled (and (eq "<nil>" (toString .Values.jarvice_memcached.networkPolicy.enabled)) .Values.jarvice.networkPolicy.enabled) }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: jarvice-memcached
spec:
  podSelector:
    matchLabels:
      deployment: jarvice-memcached
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .Release.Namespace }}
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 11211
---
{{- end }}
{{- end }}
{{- end }}
