{{- if .Values.jarvice_registry_proxy.enabled }}
{{- if and (gt (.Values.jarvice_registry_proxy.replicaCount | int) 1) (eq .Values.jarvice_registry_proxy.persistence.accessMode "ReadWriteMany") }}
{{- if (semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion) }}
apiVersion: policy/v1
{{- else }}
apiVersion: policy/v1beta1
{{- end }}
kind: PodDisruptionBudget
metadata:
  name: jarvice-registry-proxy
spec:
  selector:
    matchLabels:
      deployment: jarvice-registry-proxy
  minAvailable: {{ .Values.jarvice_registry_proxy.pdb.minAvailable }}
---
{{- end }}
{{- if and .Values.jarvice_registry_proxy.persistence.enabled (empty .Values.jarvice_registry_proxy.persistence.existingClaimName) }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jarvice-registry-proxy-pvc
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-registry-proxy
{{- if eq .Values.jarvice_registry_proxy.persistence.resourcePolicy "keep" }}
  annotations:
    helm.sh/resource-policy: keep
{{- end }}
spec:
  accessModes:
    - {{ .Values.jarvice_registry_proxy.persistence.accessMode }}
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.jarvice_registry_proxy.persistence.size }}
{{- if .Values.jarvice_registry_proxy.persistence.storageClass }}
{{- if (eq "-" .Values.jarvice_registry_proxy.persistence.storageClass) }}
  storageClassName: ""
{{- else }}
  storageClassName: "{{ .Values.jarvice_registry_proxy.persistence.storageClass }}"
{{- end }}
{{- end }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jarvice-registry-proxy
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-registry-proxy
    deployment: jarvice-registry-proxy
spec:
{{- if (eq .Values.jarvice_registry_proxy.persistence.accessMode "ReadWriteMany") }}
  replicas: {{ .Values.jarvice_registry_proxy.replicaCount }}
{{- else }}
  replicas: 1
{{- end }}
  selector:
    matchLabels:
      deployment: jarvice-registry-proxy
  template:
    metadata:
      labels:
        {{- include "jarvice.release_labels" . | indent 8 }}
        component: jarvice-registry-proxy
        deployment: jarvice-registry-proxy
      annotations:
        checksum/config: {{ (printf "%s" .Values.jarvice.imagePullSecret) | sha256sum }}
    spec:
{{- if (not (empty .Values.jarvice_registry_proxy.tolerations)) }}
      tolerations: {{ .Values.jarvice_registry_proxy.tolerations }}
{{- else if (not (empty .Values.jarvice.tolerations)) }}
      tolerations: {{ .Values.jarvice.tolerations }}
{{- end }}
{{- if (not (empty .Values.jarvice_registry_proxy.nodeSelector)) }}
      nodeSelector: {{ .Values.jarvice_registry_proxy.nodeSelector }}
{{- else if (not (empty .Values.jarvice.nodeSelector)) }}
      nodeSelector: {{ .Values.jarvice.nodeSelector }}
{{- end }}
      affinity:
{{- if (not (empty .Values.jarvice_registry_proxy.nodeAffinity)) }}
        nodeAffinity: {{ .Values.jarvice_registry_proxy.nodeAffinity }}
{{- else if (not (empty .Values.jarvice.nodeAffinity)) }}
        nodeAffinity: {{ .Values.jarvice.nodeAffinity }}
{{- end }}
        podAntiAffinity:
        {{- if eq .Values.jarvice_registry_proxy.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                deployment: jarvice-registry-proxy
        {{- else if eq .Values.jarvice_registry_proxy.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  deployment: jarvice-registry-proxy
        {{- end }}
      volumes:
        - name: jarvice-registry-proxy-config
          configMap:
            name: jarvice-registry-proxy-config
            optional: false
        - name: jarvice-registry-proxy-cert
          secret:
            secretName: jarvice-registry-proxy-cert
            optional: false
        - name: jarvice-registry-proxy-htpasswd
          secret:
            secretName: jarvice-registry-proxy
            optional: false
            items:
            - key: "htpasswd"
              path: htpasswd
{{- if .Values.jarvice_registry_proxy.persistence.enabled }}
        - name: registry-data-vol
          persistentVolumeClaim:
{{- if (empty .Values.jarvice_registry_proxy.persistence.existingClaimName) }}
            claimName: jarvice-registry-proxy-pvc
{{- else }}
            claimName: {{ .Values.jarvice_registry_proxy.persistence.existingClaimName }}
{{- end }}
{{- end }}
      containers:
      - name: jarvice-registry-proxy
        image: {{ .Values.jarvice_registry_proxy.image }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.jarvice_registry_proxy.imagePullPolicy }}
        command:
        - /bin/registry
        - serve
        - /etc/docker/registry/config.yml
        ports:
          - name: https
            containerPort: {{ .Values.jarvice_registry_proxy.nodePort }}
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /
            port: {{ .Values.jarvice_registry_proxy.nodePort }}
          initialDelaySeconds: {{ .Values.jarvice_registry_proxy.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.jarvice_registry_proxy.readinessProbe.timeoutSeconds }}
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /
            port: {{ .Values.jarvice_registry_proxy.nodePort }}
          initialDelaySeconds: {{ .Values.jarvice_registry_proxy.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.jarvice_registry_proxy.livenessProbe.timeoutSeconds }}
        env:
          - name: REGISTRY_HTTP_ADDR
            value: ":{{ .Values.jarvice_registry_proxy.nodePort }}"
          - name: REGISTRY_HTTP_TLS_CERTIFICATE
            value: /etc/ssl/docker/tls.crt
          - name: REGISTRY_HTTP_TLS_KEY
            value: /etc/ssl/docker/tls.key
{{- if (not (empty .Values.jarvice.JARVICE_HTTP_PROXY)) }}
          - name: http_proxy
            value: "{{ .Values.jarvice.JARVICE_HTTP_PROXY }}"
{{- end }}
{{- if (not (empty .Values.jarvice.JARVICE_HTTPS_PROXY)) }}
          - name: https_proxy
            value: "{{ .Values.jarvice.JARVICE_HTTPS_PROXY }}"
{{- end }}
{{- if or .Values.jarvice.JARVICE_HTTPS_PROXY .Values.jarvice.JARVICE_HTTP_PROXY .Values.jarvice.JARVICE_NO_PROXY }}
{{- if (not (empty .Values.jarvice.JARVICE_NO_PROXY)) }}
          - name: no_proxy
            value: '{{ include "jarvice.no_proxy" . }},{{ .Values.jarvice.JARVICE_NO_PROXY }}'
{{- else }}
          - name: no_proxy
            value: '{{ include "jarvice.no_proxy" . }}'
{{- end }}
{{- end }}
          - name: REGISTRY_PROXY_REMOTEURL
{{- if empty .Values.jarvice_registry_proxy.env.REGISTRY_PROXY_REMOTEURL }}
            value: "https://{{ .Values.jarvice.JARVICE_SYSTEM_REGISTRY }}"
{{- else }}
            value: "https://{{ .Values.jarvice_registry_proxy.env.REGISTRY_PROXY_REMOTEURL }}"
{{- end }}
          - name: REGISTRY_PROXY_USERNAME
            valueFrom:
              secretKeyRef:
                name: jarvice-registry-proxy
                key: REGISTRY_PROXY_USERNAME
                optional: false
          - name: REGISTRY_PROXY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: jarvice-registry-proxy
                key: REGISTRY_PROXY_PASSWORD
                optional: false
        volumeMounts:
        - name: jarvice-registry-proxy-config
          mountPath: "/etc/docker/registry"
        - name: jarvice-registry-proxy-cert
          mountPath: "/etc/ssl/docker"
          readOnly: true
        - name: jarvice-registry-proxy-htpasswd
          mountPath: "/etc/auth/docker/htpasswd"
          subPath: "htpasswd"
          readOnly: true
{{- if .Values.jarvice_registry_proxy.persistence.enabled }}
        - name: registry-data-vol
          mountPath: /var/lib/registry
{{- end }}
        resources:
{{ toYaml .Values.jarvice_registry_proxy.resources | indent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: jarvice-registry-proxy
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-registry-proxy
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: {{ .Values.jarvice_registry_proxy.nodePort }}
    targetPort: https
    name: https
  selector:
    deployment: jarvice-registry-proxy
---
apiVersion: v1
kind: Service
metadata:
  name: jarvice-registry-proxy-np
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-registry-proxy
spec:
  type: NodePort
  ports:
  - protocol: TCP
    port: {{ .Values.jarvice_registry_proxy.nodePort }}
    targetPort: https
    nodePort: {{ .Values.jarvice_registry_proxy.nodePort }}
    name: https
  selector:
    deployment: jarvice-registry-proxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jarvice-registry-proxy-config
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-registry-proxy
data:
  config.yml: |-
    version: 0.1
    storage:
      filesystem:
        rootdirectory: /var/lib/registry
    http:
      headers:
        X-Content-Type-Options: [nosniff]
    auth:
      htpasswd:
        realm: jarvice-registry-proxy
        path: /etc/auth/docker/htpasswd
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: jarvice-registry-proxy-cert
spec:
  dnsNames:
    - localhost
    - jarvice-registry-proxy
    - jarvice-registry-proxy.{{ .Release.Namespace }}
  secretName: jarvice-registry-proxy-cert
  issuerRef:
    name: jarvice-issuer-selfsigned
---
{{- if .Values.jarvice_registry_proxy_gc.enabled }}
{{- if (semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion) }}
apiVersion: batch/v1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: jarvice-registry-proxy-gc
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-registry-proxy-gc
    cronjob: jarvice-registry-proxy-gc
spec:
  schedule: "{{ .Values.jarvice_registry_proxy_gc.schedule }}"
  failedJobsHistoryLimit: {{ .Values.jarvice_registry_proxy_gc.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ .Values.jarvice_registry_proxy_gc.successfulJobsHistoryLimit }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        metadata:
          labels:
            {{- include "jarvice.release_labels" . | indent 12 }}
            component: jarvice-registry-proxy-gc
            cronjob: jarvice-registry-proxy-gc
          annotations:
            deployment-date: {{ now | quote }}
        spec:
          serviceAccountName: jarvice-system
          restartPolicy: Never
{{- if (not (empty .Values.jarvice_registry_proxy_gc.tolerations)) }}
          tolerations: {{ .Values.jarvice_registry_proxy_gc.tolerations }}
{{- else if (not (empty .Values.jarvice.tolerations)) }}
          tolerations: {{ .Values.jarvice.tolerations }}
{{- end }}
{{- if (not (empty .Values.jarvice_registry_proxy_gc.nodeSelector)) }}
          nodeSelector: {{ .Values.jarvice_registry_proxy_gc.nodeSelector }}
{{- else if (not (empty .Values.jarvice.nodeSelector)) }}
          nodeSelector: {{ .Values.jarvice.nodeSelector }}
{{- end }}
{{- if (not (empty .Values.jarvice_registry_proxy_gc.nodeAffinity)) }}
          affinity:
            nodeAffinity: {{ .Values.jarvice_registry_proxy_gc.nodeAffinity }}
{{- else if (not (empty .Values.jarvice.nodeAffinity)) }}
          affinity:
            nodeAffinity: {{ .Values.jarvice.nodeAffinity }}
{{- end }}
          imagePullSecrets:
          - name: jarvice-docker
          volumes:
            - name: jarvice-registry-proxy-gc
              configMap:
                name: jarvice-registry-proxy-gc
                optional: false
          containers:
          - name: jarvice-registry-proxy-gc
            image: {{ template "jarvice.registrysub" merge (dict "image" .Values.jarvice_registry_proxy_gc.image) . }}
            imagePullPolicy: {{ default "IfNotPresent" .Values.jarvice_registry_proxy_gc.imagePullPolicy }}
            command:
            - /bin/sh
            - /opt/bin/jarvice-registry-proxy-gc
            env:
              - name: JARVICE_SYSTEM_NAMESPACE
{{- if empty .Values.jarvice.JARVICE_SYSTEM_NAMESPACE }}
                value: {{ .Release.Namespace }}
{{- else }}
                value: {{ .Values.jarvice.JARVICE_SYSTEM_NAMESPACE }}
{{- end }}
              - name: IMAGE_LAST_ACCESS_SECONDS
                value: "{{ .Values.jarvice_registry_proxy_gc.env.IMAGE_LAST_ACCESS_SECONDS | int }}"
            volumeMounts:
            - name: jarvice-registry-proxy-gc
              mountPath: /opt/bin
              readOnly: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jarvice-registry-proxy-gc
data:
  jarvice-registry-proxy-gc: |-
{{ .Files.Get "files/jarvice-registry-proxy-gc" | indent 4 }}
{{- end }}
{{- end }}
