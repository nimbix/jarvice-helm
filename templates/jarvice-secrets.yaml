{{- if (not (eq "downstream" .Values.jarvice.JARVICE_CLUSTER_TYPE)) }}
{{- if (not (empty .Values.jarvice.JARVICE_LICENSE_LIC)) }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-license
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-scheduler
type: Opaque
data:
  JARVICE_LICENSE_LIC: {{ printf "%s" .Values.jarvice.JARVICE_LICENSE_LIC | b64enc }}
---
{{- else }}
{{- required "***** !!!!! A valid JARVICE license key is required.  Please provide a value for jarvice.JARVICE_LICENSE_LIC.  Contact Nimbix sales (sales@nimbix.net) and/or support (support@nimbix.net) if necessary. !!!!! *****" .Values.jarvice.JARVICE_LICENSE_LIC }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-appsync
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-appsync
type: Opaque
data:
  JARVICE_REMOTE_USER: {{ printf "%s" .Values.jarvice.JARVICE_REMOTE_USER | b64enc }}
  JARVICE_REMOTE_APIKEY: {{ printf "%s" .Values.jarvice.JARVICE_REMOTE_APIKEY | b64enc }}
---
{{- if (not (empty .Values.jarvice.JARVICE_MAIL_PASSWORD)) }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-mail
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-system
type: Opaque
data:
  JARVICE_MAIL_PASSWORD: {{ printf "%s" .Values.jarvice.JARVICE_MAIL_PASSWORD | b64enc }}
---
{{- if .Values.jarvice_api.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-mail
{{- if empty .Values.jarvice.JARVICE_JOBS_NAMESPACE }}
  namespace: {{ .Release.Namespace }}-builds
{{- else }}
  namespace: {{ .Values.jarvice.JARVICE_JOBS_NAMESPACE }}
{{- end }}
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-system
type: Opaque
data:
  JARVICE_MAIL_PASSWORD: {{ printf "%s" .Values.jarvice.JARVICE_MAIL_PASSWORD | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-mail
{{- if empty .Values.jarvice.JARVICE_PULLS_NAMESPACE }}
  namespace: {{ .Release.Namespace }}-pulls
{{- else }}
  namespace: {{ .Values.jarvice.JARVICE_PULLS_NAMESPACE }}
{{- end }}
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-system
type: Opaque
data:
  JARVICE_MAIL_PASSWORD: {{ printf "%s" .Values.jarvice.JARVICE_MAIL_PASSWORD | b64enc }}
---
{{- end }}
{{- end }}
{{- if .Values.jarvice_mc_portal.enabled }}
{{- if (not (lookup "v1" "Secret" .Release.Namespace "krb5.keytab").metadata) }}
apiVersion: v1
kind: Secret
metadata:
  name: krb5.keytab
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-mc-portal
  annotations:
{{- if .Release.IsInstall }}
    "helm.sh/hook": post-install
{{- else }}
    "helm.sh/hook": post-upgrade
{{- end }}
type: Opaque
data:
  krb5.keytab: ""
---
{{- end }}
{{- if (not (empty .Values.jarvice_mc_portal.env.JARVICE_PORTAL_MAIL_PASSWORD)) }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-mc-portal
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-mc-portal
type: Opaque
data:
  JARVICE_PORTAL_MAIL_PASSWORD: {{ printf "%s" .Values.jarvice_mc_portal.env.JARVICE_PORTAL_MAIL_PASSWORD | b64enc }}
---
{{- end }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-db
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-db
type: Opaque
data:
{{- if (not (empty .Values.jarvice.JARVICE_DBPASSWD)) }}
  JARVICE_DBPASSWD: {{ printf "%s" .Values.jarvice.JARVICE_DBPASSWD | b64enc }}
{{- end }}
{{- if (not (empty .Values.jarvice_db.env.MYSQL_ROOT_PASSWORD)) }}
  MYSQL_ROOT_PASSWORD: {{ printf "%s" .Values.jarvice_db.env.MYSQL_ROOT_PASSWORD | b64enc }}
{{- end }}
{{- if (not (empty .Values.jarvice_db.env.MYSQL_PASSWORD)) }}
  MYSQL_PASSWORD: {{ printf "%s" .Values.jarvice_db.env.MYSQL_PASSWORD | b64enc }}
{{- end }}
{{- if (not (empty .Values.jarvice_dal.env.JARVICE_SITE_DBPASSWD)) }}
  JARVICE_SITE_DBPASSWD: {{ printf "%s" .Values.jarvice_dal.env.JARVICE_SITE_DBPASSWD | b64enc }}
{{- end }}
{{- if (not (empty .Values.jarvice_mc_portal.env.JARVICE_PORTAL_DBPASSWD)) }}
  JARVICE_PORTAL_DBPASSWD: {{ printf "%s" .Values.jarvice_mc_portal.env.JARVICE_PORTAL_DBPASSWD | b64enc }}
{{- end }}
---
{{- else }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-sched-server-key
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-k8s-scheduler
type: Opaque
data:
  JARVICE_SCHED_SERVER_KEY: {{ printf "%s" .Values.jarvice.JARVICE_SCHED_SERVER_KEY | b64enc }}
---
{{- if .Values.jarvice_slurm_scheduler.enabled }}
{{- range .Values.jarvice_slurm_scheduler.schedulers }}
{{- if (not (empty .env.JARVICE_SCHED_SERVER_KEY)) }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-sched-server-key-{{ .name }}
  labels:
    {{- include "jarvice.release_labels" $ | indent 4 }}
    component: jarvice-slurm-scheduler-{{ .name }}
type: Opaque
data:
  JARVICE_SCHED_SERVER_KEY: {{ printf "%s" .env.JARVICE_SCHED_SERVER_KEY | b64enc }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- if or .Values.jarvice_license_manager.enabled (not (empty .Values.jarvice.JARVICE_LICENSE_MANAGER_URL)) (not (empty .Values.jarvice.JARVICE_LICENSE_MANAGER_KEY)) }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-license-manager
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-license-manager
type: Opaque
data:
  JARVICE_LICENSE_MANAGER_KEY: {{ printf "%s" .Values.jarvice.JARVICE_LICENSE_MANAGER_KEY | b64enc }}
  JARVICE_S3_ACCESSKEY: {{ printf "%s" .Values.jarvice_license_manager.env.JARVICE_S3_ACCESSKEY | b64enc }}
  JARVICE_S3_SECRETKEY: {{ printf "%s" .Values.jarvice_license_manager.env.JARVICE_S3_SECRETKEY | b64enc }}
---
{{- end }}
{{- if and (not (empty .Values.jarvice.JARVICE_S3_SECRETKEY)) (not (empty .Values.jarvice.JARVICE_S3_ACCESSKEY)) }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-s3-joboutput
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-s3-joboutput
type: Opaque
data:
  JARVICE_S3_ACCESSKEY: {{ printf "%s" .Values.jarvice.JARVICE_S3_ACCESSKEY | b64enc }}
  JARVICE_S3_SECRETKEY: {{ printf "%s" .Values.jarvice.JARVICE_S3_SECRETKEY | b64enc }}
---
{{- end }}
{{- if .Values.jarvice_registry_proxy.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-registry-proxy
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-registry-proxy
type: Opaque
data:
{{- if empty .Values.jarvice_registry_proxy.env.REGISTRY_PROXY_USERNAME }}
  REGISTRY_PROXY_USERNAME: {{ printf "_json_key" | b64enc }}
{{- else }}
  REGISTRY_PROXY_USERNAME: {{ printf "%s" .Values.jarvice_registry_proxy.env.REGISTRY_PROXY_USERNAME | b64enc }}
{{- end }}
{{- if empty .Values.jarvice_registry_proxy.env.REGISTRY_PROXY_PASSWORD }}
  REGISTRY_PROXY_PASSWORD: {{ toYaml (printf "%s" (trimPrefix "_json_key:" (.Values.jarvice.imagePullSecret | b64dec))) | b64enc }}
{{- else }}
  REGISTRY_PROXY_PASSWORD: {{ toYaml (printf "%s" .Values.jarvice_registry_proxy.env.REGISTRY_PROXY_PASSWORD) | b64enc }}
{{- end }}
{{- if or (empty .Values.jarvice_registry_proxy.env.REGISTRY_PROXY_USERNAME) (empty .Values.jarvice_registry_proxy.env.REGISTRY_PROXY_PASSWORD) }}
  htpasswd: {{ (htpasswd "_json_key" (printf "%s" (trimPrefix "_json_key:" (.Values.jarvice.imagePullSecret | b64dec)))) | b64enc }}
{{- else }}
  htpasswd: {{ (htpasswd .Values.jarvice_registry_proxy.env.REGISTRY_PROXY_USERNAME .Values.jarvice_registry_proxy.env.REGISTRY_PROXY_PASSWORD) | b64enc }}
{{- end }}
---
{{- end }}
{{- if (not (empty .Values.jarvice.imagePullSecret)) }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-docker
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-system
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ include "jarvice.dockerconfigjson" . }}
---
{{- end }}
{{- if or .Values.jarvice_scheduler.enabled .Values.jarvice_k8s_scheduler.enabled }}
{{- if (not (empty .Values.jarvice.imagePullSecret)) }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-docker
{{- if empty .Values.jarvice.JARVICE_JOBS_NAMESPACE }}
  namespace: {{ .Release.Namespace }}-jobs
{{- else }}
  namespace: {{ .Values.jarvice.JARVICE_JOBS_NAMESPACE }}
{{- end }}
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-system
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ include "jarvice.dockerconfigjson" . }}
---
{{- end }}
{{- end }}
{{- if .Values.jarvice_slurm_scheduler.enabled }}
{{- range .Values.jarvice_slurm_scheduler.schedulers }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-slurm-scheduler-{{ .name }}
  labels:
    {{- include "jarvice.release_labels" $ | indent 4 }}
    component: jarvice-slurm-scheduler-{{ .name }}
data:
{{- if or (not (empty .sshConf.user)) (not (empty .sshConf.pkey)) }}
  user: {{ printf "%s" .sshConf.user | b64enc }}
  pkey: {{ .sshConf.pkey }}
{{- else }}
{{- required "***** !!!!! slurm ssh config required. Please provide values for jarvice_slurm_scheduler.sshConf. !!!!! *****" .Values.jarvice_slurm_scheduler.sshConf.user }}
{{- end }}
---
{{- end }}
{{- end }}
{{- if (not (eq "downstream" .Values.jarvice.JARVICE_CLUSTER_TYPE)) }}
{{- if .Values.jarvice_api.enabled }}
{{- if (not (empty .Values.jarvice.imagePullSecret)) }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-docker
{{- if empty .Values.jarvice.JARVICE_BUILDS_NAMESPACE }}
  namespace: {{ .Release.Namespace }}-builds
{{- else }}
  namespace: {{ .Values.jarvice.JARVICE_BUILDS_NAMESPACE }}
{{- end }}
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-system
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ include "jarvice.dockerconfigjson" . }}
---
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-docker
{{- if empty .Values.jarvice.JARVICE_PULLS_NAMESPACE }}
  namespace: {{ .Release.Namespace }}-pulls
{{- else }}
  namespace: {{ .Values.jarvice.JARVICE_PULLS_NAMESPACE }}
{{- end }}
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-system
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ include "jarvice.dockerconfigjson" . }}
---
{{- end }}
{{- end }}
{{- end }}
{{- if or .Values.jarvice.daemonsets.cache_pull.enabled .Values.jarvice.daemonsets.lxcfs.enabled .Values.jarvice.daemonsets.nvidia.enabled .Values.jarvice.daemonsets.rdma.enabled }}
{{- if (not (empty .Values.jarvice.imagePullSecret)) }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-docker
{{- if empty .Values.jarvice.JARVICE_DAEMONSETS_NAMESPACE }}
  namespace: {{ .Release.Namespace }}-daemonsets
{{- else }}
  namespace: {{ .Values.jarvice.JARVICE_DAEMONSETS_NAMESPACE }}
{{- end }}
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-system
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ include "jarvice.dockerconfigjson" . }}
---
{{- end }}
{{- end }}
