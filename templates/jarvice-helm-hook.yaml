{{- if (not (eq "downstream" .Values.jarvice.JARVICE_CLUSTER_TYPE)) }}
{{- if .Values.jarvice_bird.create_client }}
apiVersion: v1
data:
{{- $files := .Files }}
  jarvice_client.json: |-
{{ $files.Get "files/keycloak-config/client/jarvice_client.json" | indent 4 }}
  jarvice_user_role.json: |-
{{ $files.Get "files/keycloak-config/client/roles/jarvice_user_role.json" | indent 4 }}
  jarvice_sysadmin_role.json: |-
{{ $files.Get "files/keycloak-config/client/roles/jarvice_sysadmin_role.json" | indent 4 }}
  jarvice_kcadmin_role.json: |-
{{ $files.Get "files/keycloak-config/client/roles/jarvice_kcadmin_role.json" | indent 4 }}
kind: ConfigMap
metadata:
  name: jarvice-keycloak-client
---
apiVersion: batch/v1
kind: Job
metadata:
  name: jarvice-create-keycloak-client
  namespace: {{ .Values.jarvice.JARVICE_SYSTEM_NAMESPACE }}
  annotations:
    "helm.sh/hook": post-upgrade,post-install
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: jarvice
spec:
  template:
    metadata:
      name: jarvice-create-keycloak-client
      labels:
        app: jarvice
    spec:
      volumes:
      {{- include "jarvice.rootCertVolume" . | indent 6 }}
      - name: jarvice-keycloak-client
        configMap:
          name: jarvice-keycloak-client
          optional: false
          defaultMode: 444
      hostAliases:
      {{- include "jarvice.hostAliases" . | nindent 8 }}
      containers:
        - name: jarvice-create-keycloak-client
          volumeMounts:
          {{- include "jarvice.rootCertVolumeMount" . | indent 10 }}
          - name: jarvice-keycloak-client
            mountPath: /etc/jarvice/jarvice_client.json
            subPath: jarvice_client.json
            readOnly: true
          - name: jarvice-keycloak-client
            mountPath: /etc/jarvice/jarvice_user_role.json
            subPath: jarvice_user_role.json
            readOnly: true
          - name: jarvice-keycloak-client
            mountPath: /etc/jarvice/jarvice_sysadmin_role.json
            subPath: jarvice_sysadmin_role.json
            readOnly: true
          - name: jarvice-keycloak-client
            mountPath: /etc/jarvice/jarvice_kcadmin_role.json
            subPath: jarvice_kcadmin_role.json
            readOnly: true
          env:
          - name: JARVICE_SYSTEM_NAMESPACE
            value: "{{ .Release.Namespace }}"
          - name: KEYCLOAK_URL
            value: "{{ .Values.jarvice_bird.env.KEYCLOAK_URL }}"
          - name: KEYCLOAK_REALM
            value: "{{ .Values.jarvice_bird.env.KEYCLOAK_REALM }}"
          - name: JARVICE_KEYCLOAK_USER
            value: "{{ .Values.jarvice_bird.env.JARVICE_KEYCLOAK_ADMIN_USER }}"
          - name: JARVICE_KEYCLOAK_PASSWD
            value: "{{ .Values.jarvice_bird.env.JARVICE_KEYCLOAK_ADMIN_PASS }}"
          - name: JARVICE_BIRD_INGRESSHOST
            value: "{{ .Values.jarvice_bird.ingressHost }}"
          image: "{{ .Values.jarvice_helm_hook.image }}"
          imagePullPolicy: IfNotPresent
          command:
          - /bin/sh
          - -c
          - |
          {{- range $line := splitList "\n" (.Files.Get "files/jarvice-create-keycloak-client.sh") }}
          {{ . | indent 4 }}
          {{- end }}
      restartPolicy: OnFailure
{{- if (not (empty .Values.jarvice.tolerations)) }}
      tolerations: {{ .Values.jarvice.tolerations }}
{{- end }}
      serviceAccountName: jarvice-system
{{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jarvice-label-ns
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: label-ns
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  resourceNames: ["{{ .Release.Namespace }}"]
  verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Namespace }}:label-ns
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
subjects:
  - kind: ServiceAccount
    name: "jarvice-label-ns"
roleRef:
  kind: Role
  name: label-ns
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: jarvice-label-ns
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: jarvice
spec:
  template:
    metadata:
      name: jarvice-label-ns
      labels:
        app: jarvice
    spec:
      containers:
        - name: jarvice-label-ns
          image: "{{ .Values.jarvice_helm_hook.image }}"
          imagePullPolicy: "IfNotPresent"
          command:
          - kubectl
          - label
          - ns
          - {{ .Release.Namespace }}
          - app=jarvice
      restartPolicy: OnFailure
{{- if (not (empty .Values.jarvice.tolerations)) }}
      tolerations: {{ .Values.jarvice.tolerations }}
{{- end }}
      serviceAccountName: jarvice-label-ns
{{- if .Values.jarvice_bird.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: jarvice-get-keycloak-realm-public-key
  namespace: {{ .Values.jarvice.JARVICE_SYSTEM_NAMESPACE }}
  annotations:
    "helm.sh/hook": post-upgrade,post-install
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: jarvice
spec:
  template:
    metadata:
      name: jarvice-get-keycloak-realm-public-key
      labels:
        app: jarvice
    spec:
      volumes:
      {{- include "jarvice.rootCertVolume" . | indent 6 }}
      hostAliases:
      {{- include "jarvice.hostAliases" . | nindent 8 }}
      containers:
        - name: jarvice-get-keycloak-realm-public-key
          volumeMounts:
          {{- include "jarvice.rootCertVolumeMount" . | indent 10 }}
          env:
          - name: JARVICE_SYSTEM_NAMESPACE
            value: "{{ .Release.Namespace }}"
          - name: KEYCLOAK_URL
            value: "{{ .Values.jarvice_bird.env.KEYCLOAK_URL }}"
          - name: KEYCLOAK_REALM
            value: "{{ .Values.jarvice_bird.env.KEYCLOAK_REALM }}"
          image: "{{ .Values.jarvice_helm_hook.image }}"
          imagePullPolicy: "IfNotPresent"
          command:
          - /bin/sh
          - -c
          - |
          {{- range $line := splitList "\n" (.Files.Get "files/jarvice-get-keycloak-realm-public-key.sh") }}
          {{ . | indent 4 }}
          {{- end }}
      restartPolicy: OnFailure
{{- if (not (empty .Values.jarvice.tolerations)) }}
      tolerations: {{ .Values.jarvice.tolerations }}
{{- end }}
      serviceAccountName: jarvice-system
{{- end }}
{{- end }}
