#!/bin/bash

version_tag=v0.4.1
namespace=kube-system

function usage {
    cat <<EOF
Usage:
    $0 [options]

Options:
    --namespace <kube_namespace>    Kubernetes namespace to deploy to
                                    (Default: $namespace)
    --version-tag <tag>             Metrics server version (optional)

Example:
    $0 --namespace $namespace --version-tag $version_tag
EOF
}

HELM=$(type -p helm)
if [ -z "$HELM" ]; then
    cat <<EOF
Could not find 'helm' in PATH.  It may not be installed.
Run 'install-helm' from the 'jarvice-helm/scripts' directory to install it.
EOF
    exit 1
fi

KUBECTL=$(type -p kubectl)
if [ -z "$KUBECTL" ]; then
    cat <<EOF
Could not find 'kubectl' in PATH.  It may not be installed.
Run 'install-kubectl' from the 'jarvice-helm/scripts' directory to install it.
EOF
    exit 1
fi

while [ $# -gt 0 ]; do
    case $1 in
        --help)
            usage
            exit 0
            ;;
        --namespace)
            namespace=$2
            shift; shift
            ;;
        --version-tag)
            version_tag=$2
            shift; shift
            ;;
        *)
            usage
            exit 1
            ;;
    esac
done

set -e

if [ "$namespace" != "kube-system" ]; then
    echo
    echo "* Creating namespace: $namespace"
    $KUBECTL create namespace $namespace 2>/dev/null || /bin/true
fi

echo
echo "* Deploying..."
repo=https://kubernetes-sigs.github.io/metrics-server
"$HELM" upgrade metrics-server metrics-server --repo $repo \
    --namespace $namespace --install --reset-values \
    \
    --set image.repository=gcr.io/k8s-staging-metrics-server/metrics-server \
    --set image.tag=$version_tag \
    \
    --set-string nodeSelector."node-role\.jarvice\.io/jarvice-system"="true" \
    \
    --set tolerations[0]."key"="node-role\.jarvice\.io/jarvice-system" \
    --set tolerations[0]."effect"="NoSchedule" \
    --set tolerations[0]."operator"="Exists" \
    \
    --set tolerations[1]."key"="node-role\.kubernetes\.io/jarvice-system" \
    --set tolerations[1]."effect"="NoSchedule" \
    --set tolerations[1]."operator"="Exists" \
    \
    --set priorityClassName=system-node-critical  \
    \
    --set args[0]='--kubelet-preferred-address-types=InternalIP' \
    --set args[1]='--kubelet-insecure-tls' \
    \
    --set-string service.labels."kubernetes\.io/cluster-service"=true \
    --set-string service.labels."kubernetes\.io/name"=Metrics-server

echo
echo "* Deployment successful..."

echo
echo "For advanced setup details, visit https://github.com/kubernetes-sigs/metrics-server and/or execute:"
echo "$ helm inspect all metrics-server --repo $repo"

