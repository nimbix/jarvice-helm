#!/bin/bash

HELM_VER_REQ=3.2.0

jarvice_chart_dir=$(realpath --relative-to=$(pwd) $(dirname $0)/..)
args="$*"

release=jarvice
namespace=jarvice-system
values=$jarvice_chart_dir/override.yaml
[ ! -f "$jarvice_chart_dir/values.yaml" ] && values=./override.yaml
repo=https://nimbix.github.io/jarvice-helm/
version=

function usage {
    cat <<EOF
Usage:
    $0 [options] -- [extra_helm_options]

Options:
    -r, --release <release>             Helm release name
                                        (Default: $release)
    -n, --namespace <kube_namespace>    Kubernetes namespace to deploy to
                                        (Default: $namespace)
    -f, --values <values_file>          Site specific values YAML file
                                        (Default: $values)
    -r, --repo <helm_repo>              JARVICE helm repository
                                        (Default: $repo)
    -v, --version <jarvice_version>     JARVICE chart version from helm repo
                                        (Default: install via local chart dir)

Example deployment using remote JARVICE helm chart repository (preferred):
    $0 -f $values -v 3.0.0-1.XXXXXXXXXXXX

Example deployment using local JARVICE helm chart directory:
    $0 -f $values

Visit the JARVICE helm releases page for the latest release versions:
https://github.com/nimbix/jarvice-helm/releases

Available helm values for a released version can be found via:
curl https://raw.githubusercontent.com/nimbix/jarvice-helm/<jarvice_version>/values.yaml

EOF
}

function strict_version {
    ver=$1
    ver_req=$2
    $(type -p python3 || type -p python) -c "from distutils.version import StrictVersion;print(StrictVersion('$ver') >= StrictVersion('$ver_req'));" 2>/dev/null || /bin/true
}

HELM=$(type -p helm)
if [ -z "$HELM" ]; then
    cat <<EOF
Could not find 'helm' in PATH.  It may not be installed.
Run 'install-helm' from the 'jarvice-helm/scripts' directory to install it.
EOF
    exit 1
fi

HELM_VER=$($HELM version 2>/dev/null | grep 'Version:' | sed -E 's/.*Version:"v([.0-9]+)".*/\1/')
if [ "$(strict_version $HELM_VER $HELM_VER_REQ)" != "True" ]; then
    echo "helm version $HELM_VER_REQ or newer is required."
    echo "Please upgrade helm or remove it."
    echo "Run 'install-helm' from the 'jarvice-helm/scripts' directory to re-install it."
    exit 1
fi


KUBECTL=$(type -p kubectl)
if [ -z "$KUBECTL" ]; then
    cat <<EOF
Could not find 'kubectl' in PATH.  It may not be installed.
Run 'install-kubectl' from the 'jarvice-helm/scripts' directory to install it.
EOF
    exit 1
fi

while [ $# -gt 0 ]; do
    case $1 in
        --help)
            usage
            exit 0
            ;;
        -r|--release)
            release=$2
            shift; shift
            ;;
        -n|--namespace)
            namespace=$2
            shift; shift
            ;;
        -f|--values)
            values=$2
            shift; shift
            ;;
        -r|--repo|--repository)
            repo=$2
            shift; shift
            ;;
        -v|--version)
            version=$2
            shift; shift
            ;;
        --)
            shift;
            break;
            ;;
        *)
            usage
            exit 1
            ;;
    esac
done

if [ -z "$version" -a ! -f "$jarvice_chart_dir/values.yaml" ]; then
    cat <<EOF
Could not find values.yaml in the JARVICE helm chart directory: $jarvice_chart_dir

This must not be a valid JARVICE helm chart directory.
Please be sure to execute this script from a cloned jarvice-helm git repo.
Cannot continue.  Exiting...
EOF
    exit 1
fi

if [ ! -f "$values" ]; then
    if [ -z "$version" ]; then
        cat <<EOF

Could not find values YAML file: $values

Please create a copy of $jarvice_chart_dir/values.yaml file for site specific
configuration and use with this script.

Example:
    cp $jarvice_chart_dir/values.yaml $values
    <open $values and make site specific edits>
    $0 $args
EOF
    else
        cat <<EOF

Could not find values YAML file: $values

Please download a copy of values.yaml file for site specific
configuration and use with this script.

Example:
    curl https://raw.githubusercontent.com/nimbix/jarvice-helm/$version/values.yaml >$values
    <open $values and make site specific edits>
    $0 $args
EOF
    fi
    exit 1
fi

set -e

echo
echo "* Creating namespace: $namespace"
$KUBECTL create namespace $namespace 2>/dev/null || /bin/true

echo
echo "* Deploying JARVICE to '$namespace' namespace..."
echo
if [ -n "$version" ]; then
    release_args="$release jarvice --repo $repo --version $version"
    values_args=
else
    release_args="$release $jarvice_chart_dir"
    values_args="-f $jarvice_chart_dir/values.yaml"
fi
$HELM upgrade $release_args \
    --namespace $namespace --install --debug \
    --reset-values $values_args -f $values $*

echo
echo "* Successfully deployed JARVICE to '$namespace' namespace..."
echo

